{
  "version": 3,
  "sources": ["../../src/controllers/device.ts"],
  "sourcesContent": ["import {celebrate, Segments} from \"celebrate\";\nimport {Request, Response} from \"express\";\nimport Joi from \"joi\";\nimport {generateJWT} from \"../crypto/jwt\";\n\n\n/**\n * GET /api/v1/device/issue\n *\n * Generates a JWK and returns it as a JSON object\n */\nexport const issue = [\n    celebrate({\n        [Segments.BODY]: Joi.object({\n            address: Joi.string().required(),\n        }),\n    }),\n    async (req: Request, res: Response) => {\n        const jwt = await generateJWT(req.body.address);\n        res.status(200).send({token: jwt});\n    }\n];\n\nexport const mock_issue = [\n    async (req: Request, res: Response) => {\n        const vitalikETH = \"0xAb5801a7D398351b8bE11C439e05C5B3259aeC9B\";\n        const jwt = await generateJWT(vitalikETH);\n        res.status(200).send({token: jwt});\n    }\n];\n"],
  "mappings": "0jBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,WAAAE,EAAA,eAAAC,IAAA,eAAAC,EAAAJ,GAAA,IAAAK,EAAkC,qBAElCC,EAAgB,kBAChBC,EAA0B,yBAQnB,MAAML,EAAQ,IACjB,aAAU,CACN,CAAC,WAAS,IAAI,EAAG,EAAAM,QAAI,OAAO,CACxB,QAAS,EAAAA,QAAI,OAAO,EAAE,SAAS,CACnC,CAAC,CACL,CAAC,EACD,MAAOC,EAAcC,IAAkB,CACnC,MAAMC,EAAM,QAAM,eAAYF,EAAI,KAAK,OAAO,EAC9CC,EAAI,OAAO,GAAG,EAAE,KAAK,CAAC,MAAOC,CAAG,CAAC,CACrC,CACJ,EAEaR,EAAa,CACtB,MAAOM,EAAcC,IAAkB,CAEnC,MAAMC,EAAM,QAAM,eADC,4CACqB,EACxCD,EAAI,OAAO,GAAG,EAAE,KAAK,CAAC,MAAOC,CAAG,CAAC,CACrC,CACJ",
  "names": ["device_exports", "__export", "issue", "mock_issue", "__toCommonJS", "import_celebrate", "import_joi", "import_jwt", "Joi", "req", "res", "jwt"]
}
